export declare const ARWEAVE_SCHEMA_CONTEXT = "\n\"\"\"\n\"\"\"\nArweave GraphQL Schema\nNOTE: \nOnly the following fields are required in queries by default:\n  edges {\n    node {\n      id\n      tags {\n        name\n        value\n      }\n    }\n  }\nAll other fields are optional and included only when explicitly asked for.\n\"\"\"\nschema {\n  query: Query\n}\n\n\"\"\"\nEntry point for queries\n\"\"\"\ntype Query {\n  \"\"\"\n  Returns a list of transactions matching the given filters\n  - Only the edges->node->id/tags are required by default.\n  \"\"\"\n  transactions(\n    first: Int\n    after: String\n    block: BlockFilter\n    tags: [TagFilter!]\n    owners: [String!]\n    recipients: [String!]\n    height: HeightFilter\n    sort: SortOrder = HEIGHT_DESC\n  ): TransactionsConnection\n\n  \"\"\"\n  Fetch a specific transaction by its ID\n  \"\"\"\n  transaction(id: ID!): Transaction\n\n  \"\"\"\n  Fetch a specific block by its height\n  \"\"\"\n  block(height: Int): Block\n\n  \"\"\"\n  Returns a list of blocks matching the given filters\n  \"\"\"\n  blocks(\n    first: Int\n    after: String\n    filter: BlockFilter\n    sort: SortOrder = HEIGHT_DESC\n  ): BlocksConnection\n}\n\n\"\"\"\nDefines sorting order for queries\n\"\"\"\nenum SortOrder {\n  HEIGHT_ASC\n  HEIGHT_DESC\n}\n\n\"\"\"\nPagination wrapper for Transactions\n\"\"\"\ntype TransactionsConnection {\n  pageInfo: PageInfo\n  edges: [TransactionEdge!]\n}\n\n\"\"\"\nContains the cursor and actual transaction node\n\"\"\"\ntype TransactionEdge {\n  cursor: String!\n  node: Transaction!\n}\n\n\"\"\"\nPagination wrapper for Blocks\n\"\"\"\ntype BlocksConnection {\n  pageInfo: PageInfo\n  edges: [BlockEdge!]\n}\n\n\"\"\"\nContains the cursor and actual block node\n\"\"\"\ntype BlockEdge {\n  cursor: String!\n  node: Block!\n}\n\n\"\"\"\nPagination info\n\"\"\"\ntype PageInfo {\n  hasNextPage: Boolean!\n  endCursor: String\n}\n\n\"\"\"\nRepresents an Arweave transaction\n- Only id and tags (with name, value) are required by default in queries.\n\"\"\"\ntype Transaction {\n  id: ID!\n  anchor: String\n  signature: String\n  owner: Owner\n  recipient: String\n  fee: Amount\n  quantity: Amount\n  tags: [Tag!]\n  data: DataContent\n  block: Block\n}\n\n\"\"\"\nRepresents a tag in a transaction\n\"\"\"\ntype Tag {\n  name: String!\n  value: String!\n}\n\n\"\"\"\nOwner of a transaction, containing address and public key\n\"\"\"\ntype Owner {\n  address: String!\n  key: String!\n}\n\n\"\"\"\nFee, quantity, or any Winston/AR amount\n\"\"\"\ntype Amount {\n  winston: String!\n  ar: String!\n}\n\n\"\"\"\nMetadata about the transaction data\n\"\"\"\ntype DataContent {\n  size: String!\n  type: String\n}\n\n\"\"\"\nA block on the Arweave chain\n\"\"\"\ntype Block {\n  id: ID!\n  height: Int!\n  timestamp: Int!\n  previous: ID\n  indepHash: ID\n}\n\n\"\"\"\nFilter blocks by height range\n\"\"\"\ninput BlockFilter {\n  min: Int\n  max: Int\n}\n\n\"\"\"\nUsed to filter transactions by a specific tag name and its possible values\nExample: To find transactions with App-Name = \"ArDrive-App\":\ntags: [{ name: \"App-Name\", values: [\"ArDrive-App\"] }]\n\"\"\"\ninput TagFilter {\n  name: String!    # The tag name to filter by\n  values: [String!] # Array of possible values for this tag\n}\n\n\"\"\"\nFilter transactions by height range\n\"\"\"\ninput HeightFilter {\n  min: Int\n  max: Int\n}\n\nUsage Examples:\n\n1. Basic transaction query with tag filter:\nquery {\n  transactions(\n    first: 10\n    tags: [{ \n      name: \"App-Name\", \n      values: [\"ArDrive-App\"] \n    }]\n  ) {\n    edges {\n      node {\n        id\n        tags {\n          name\n          value\n        }\n      }\n    }\n  }\n}\n\n2. Query with multiple tag filters and block range:\nquery {\n  transactions(\n    first: 10,\n    block: {\n      min: 1000000,\n      max: 1000100\n    }\n    tags: [\n      { name: \"App-Name\", values: [\"ArDrive-App\"] },\n      { name: \"Content-Type\", values: [\"image/png\", \"image/jpeg\"] }\n    ]\n  ) {\n    edges {\n      node {\n        id\n        tags {\n          name\n          value\n        }\n        block {\n          height\n        }\n      }\n    }\n  }\n}\n\n3. Query with single tag value:\nquery {\n  transactions(\n    first: 10\n    tags: [{ \n      name: \"Entity-Type\", \n      values: [\"drive\"] \n    }]\n  ) {\n    edges {\n      node {\n        id\n        tags {\n          name\n          value\n        }\n      }\n    }\n  }\n}\n\n4. Query for specific tag name and values + block range:\n\"first 10 transactions with Entity-Type equals to drive from block min_block to max_block\"\n\nquery {\n  transactions(\n    first: 10\n    block: {\n      min: min_block\n      max: max_block\n    }\n    tags: [\n      {\n        name: \"Entity-Type\"\n        values: [\"drive\"]\n      }\n    ]\n  ) {\n    edges {\n      node {\n        id\n        tags {\n          name\n          value\n        }\n      }\n    }\n  }\n}\n\nIMPORTANT NOTES:\n1. Tag filters require both name and values fields\n2. The values field must be an array, even for single values\n3. Default fields to include are id and tags\n4. Additional fields should be explicitly requested\n5. Empty arrays or undefined values should be omitted from the query\n";
